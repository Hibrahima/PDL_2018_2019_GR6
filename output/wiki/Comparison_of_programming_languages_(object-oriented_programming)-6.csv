,read-write,read-only,write-only
ABAP Objects,colspan=3
C++ (STL),colspan=3
C#,type Bar { get { instructions ... return value';' } set { instructions' } }',type Bar { get { instructions ... return value';' } },type Bar { set { instructions' } }'
D,@property type bar'() { 'instructions ... return value';' } <br /> @property type bar'('type value') { 'instructions ... return value';' },@property type bar'() { 'instructions ... return value';' },@property type bar'('type value') { 'instructions ... return value';' }
eC,property type Bar { get { instructions ... return value';' } set { instructions' } }',property type Bar { get { instructions ... return value';' } },property type Bar { set { instructions' } }'
Java,colspan=3
Objective-C 2.0 (Cocoa),@property (readwrite) type bar';' <br /> and then inside @implementation <br /> - (type')'bar' { 'instructions' }' <br /> - (void)setBar':('type')'value' { 'instructions' }',
Swift,var bar : type { get { instructions' } set'«'('newBar')'»' { 'instructions' } }',var bar : type { instructions' }',
Eiffel,feature -- Access <br />x: TYPE assign set_x<br /> feature -- Settings <br /> set_x (a_x: like x) do instructions ensure x_set: verification end,,
Python,def getBar'(self):' <br /> instructions<br /> return value<br />bar' = property('getBar')',def setBar'(self  'value'): '<br /> instructions<br />bar' = property(fset = 'setBar')'
Visual Basic .NET,Property Bar'() As 'type<br />Get<br />instructions<br />Return value<br />End Get<br />Set (ByVal Value' As 'type')'<br />instructions'<br />End Set<br />End Property',ReadOnly Property Bar'() As 'type<br />Get<br />instructions<br />Return value<br />End Get<br />End Property,WriteOnly Property Bar'() As 'type<br />Set (ByVal Value' As 'type')'<br />instructions<br />End Set<br />End Property
Xojo,ComputedProperty Bar'() As 'type<br />Get<br />instructions<br />Return value<br />End Get<br />Set (ByVal Value' As 'type')'<br />instructions'<br />End Set<br />End ComputedProperty',ComputedProperty Bar'() As 'type<br />Get<br />instructions<br />Return value<br />End Get<br />End ComputedProperty,ComputedProperty Bar'() As 'type<br />Set (value' As 'type')'<br />instructions<br />End Set<br />End ComputedProperty
PHP,function __get($property') { switch ('$property') { case Bar : 'instructions ... return value'; } }<br />function __set('$property'  '$value') { switch ('$property') { case Bar : 'instructions' } }',function __get($property') { switch ($'property') { case Bar : 'instructions ... return value'; } }',function __set($property'  '$value') { switch ('$property') { case Bar : 'instructions' } }'
Perl,sub Bar {<br /> my $self = shift;<br /> if (my $Bar = shift) {<br /> # setter<br /> $self->{Bar} = $Bar;<br /> return $self;<br /> } else {<br /> # getter<br /> return $self->{Bar}; <br /> }<br />},sub Bar {<br /> my $self = shift;<br /> if (my $Bar = shift) {<br /> # read-only<br /> die "Bar is read-only\n";<br /> } else {<br /> # getter<br /> return $self->{Bar}; <br /> }<br />},sub Bar {<br /> my $self = shift;<br /> if (my $Bar = shift) {<br /> # setter<br /> $self->{Bar} = $Bar;<br /> return $self;<br /> } else {<br /> # write-only<br /> die "Bar is write-only\n"; <br /> }<br />}
Perl 6,colspan=3
Ruby,def bar <br /> instructions <br /> expression resulting in return value <br /> end <br /> def bar'=('value')' <br /> instructions <br /> end,def bar <br /> instructions <br /> expression resulting in return value <br /> end,def bar'=('value')' <br /> instructions <br /> end
Windows PowerShell,Add-Member «'-MemberType '»'ScriptProperty ' «'-Name '»Bar «'-Value '»'{' instructions ... return value' }' «'-SecondValue '»'{' instructions } -InputObject variable,Add-Member «'-MemberType '»'ScriptProperty ' «'-Name '»Bar «'-Value '»'{' instructions ... return value'}' -InputObject variable,Add-Member «'-MemberType '»'ScriptProperty ' «'-Name '»Bar -SecondValue { instructions } -InputObject variable
OCaml,colspan=3
F#,member this.Bar with get() = expression and set(value') =' expression,member this.Bar = expression,member this.Bar with set(value') =' expression
JavaScript (ES6),get bar'('«parameters»')' { instructions ... return value'}'s'et 'bar'('«parameters»') { 'instructions },get bar'('«parameters»')' { instructions ... return value'}',set bar'('«parameters»') { 'instructions }
COBOL
Cobra,pro bar «'as' type»<br /> get<br /> instructions<br /> return value<br /> set<br /> instructions,get bar «'as' type»<br /> instructions<br /> return value,set bar «'as' type»<br /> instructions
ISLISP,colspan=3
