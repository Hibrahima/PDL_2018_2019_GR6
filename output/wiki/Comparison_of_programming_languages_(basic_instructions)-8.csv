,if,else if,select case,conditional expression
Ada<ref name="Ada_RM_2012" />,if condition then statements «'else' statements» end if,if condition1 then statements elsif condition2 then statements ... «'else' statements» end if,case expression is when value_list1 => statements when value_list2 => statements ... «'when others =>' statements» end case,(if condition1 then expression1 «'elsif' condition2 then expression2» ... else expressionn) (case expression is when value_list1 => expression1 when value_list2 => expression2 ... «'when others =>' expressionn» )
Seed7,case expression of<br />when set1 : statements ... «'otherwise:' statements» <br />end case,
Modula-2,if condition then statements «'else' statements» end,if condition1 then statements elsif condition2 then statements ... «'else' statements» end,case expression of<br />caseLabelList : statements | ... «'else' statements» <br />end,
ALGOL 68 & "brief form",if condition then statements «'else' statements» fi,if condition then statements elif condition then statements fi,case switch in statements  statements« ... out statements» esac,( condition | valueIfTrue | valueIfFalse )
statements «| statements» ),statements |: condition | statements ),statements ... «| statements» )
APL,:If condition instructions «':Else' instructions»:EndIf,:If condition instructions :ElseIf condition instructions ... «':Else' instructions» :EndIf,:Select expression :Case case1 instructions ... «':Else' instructions»:EndSelect,{condition':'valueIfTrue' ⋄ 'valueIfFalse'}'
C (C99),if (condition') {'instructions'}' «'else {'instructions'}'»,if (condition') {'instructions'} else if ('condition') {'instructions'}' ... «'else {'instructions'}'»,switch (variable') { case' case1':' instructions «'break;'» ... «'default:' instructions»},condition ? valueIfTrue : valueIfFalse
Objective-C
C++ (STL)
D
Java
JavaScript
PHP
C#,switch (variable') { case' case1':' instructions'; '«jump statement';'» ... «'default:' instructions';' «jump statement';'»» }
Windows PowerShell,if (condition') { 'instructions' } elseif ('condition') { 'instructions' }' ... «'else { 'instructions' }'»,switch (variable') { 'case1' { 'instructions «'break;'» } ... «'default { 'instructions' }'»'}',
Go,if condition' {'instructions'}' «'else {'instructions'}'»,if condition' {'instructions'} else if 'condition' {'instructions'}' ... «'else {'instructions'}'» or switch { case condition':' instructions ... «'default:' instructions»},switch variable' { case' case1':' instructions ... «'default:' instructions»},
Swift,if condition' {'instructions'}' «'else {'instructions'}'»,if condition' {'instructions'} else if 'condition' {'instructions'}' ... «'else {'instructions'}'»,switch variable' { case' case1':' instructions ... «'default:' instructions»},
Perl,if (condition') {'instructions'}' «'else {'instructions'}'» or unless (notcondition') {'instructions'}' «'else {'instructions'}'»,if (condition') {'instructions'} elsif ('condition') {'instructions'}' ... «'else {'instructions'}'» or unless (notcondition') {'instructions'} elsif ('condition') {'instructions'}' ... «'else {'instructions'}'»,use feature "switch"; ... given (variable') { when ('case1') { 'instructions' }' ... «'default { 'instructions' }'»},condition ? valueIfTrue : valueIfFalse
Perl 6,if condition {instructions'}' «'else {'instructions'}'» or unless notcondition {instructions'}',if condition' {'instructions'} elsif' condition {instructions'}' ... «'else {'instructions'}',given variable { when case1 { instructions' }' ... «'default { 'instructions' }'»},condition ?? valueIfTrue ''',''' valueIfFalse
Ruby,if condition instructions «'else' instructions»,if condition instructions elsif condition instructions ... «'else' instructions» end,case variable when case1 instructions ... «'else' instructions»end,condition ? valueIfTrue : valueIfFalse
Scala,if (condition') {'instructions'}' «'else {'instructions'}'»,if (condition') {'instructions'} else if ('condition') {'instructions'}' ... «'else {'instructions'}'»,expression match { case pattern1 => expression case pattern2 => expression ... «'case _ =>' expression»},if (condition')' valueIfTrue else valueIfFalse
Smalltalk,condition ifTrue: trueBlock «'ifFalse:' falseBlock» end,,,condition ifTrue: trueBlock ifFalse: falseBlock
Common Lisp,(when condition instructions')' or (unless condition instructions')' or (if condition' (progn 'instructions') '«'(progn 'instructions')'»')',(cond (condition1 instructions') ('condition2 instructions') '... «'(t 'instructions')'»')',(case expression' ('case1 instructions') ('case2 instructions') '... «'(otherwise 'instructions')'»')',(if condition valueIfTrue valueIfFalse')'
Scheme,(when conditioninstructions')' or (if condition' (begin 'instructions') '«'(begin 'instructions')'»')',(cond (condition1 instructions') ('condition2 instructions') '... «'(else 'instructions')'»')',(case (variable') (('case1')' instructions') (('case2')' instructions') '... «'(else 'instructions')'»')'
ISLISP,(if condition' (progn 'instructions') '«'(progn 'instructions')'»')',(cond (condition1 instructions') ('condition2 instructions') '... «'(t 'instructions')'»')',(case expression' ('case1 instructions') ('case2 instructions') '... «'(t 'instructions')'»')',(if condition valueIfTrue valueIfFalse')'
Pascal,if condition then begin instructions end «'else begin' instructionsend»,if condition then begin instructions end else if condition then begin instructions end ... «'else begin' instructions end»,case variable' of' case1':' instructions ... «'else:' instructions»end
Visual Basic,If condition Then instructions «'Else' instructions»End If,If condition Then instructions ElseIf condition Then instructions ... «'Else' instructions»End If,Select Case variable Case case1 instructions ... «'Case Else' instructions» End Select,IIf(condition'  'valueIfTrue'  'valueIfFalse')'
Visual Basic .NET,If(condition'  'valueIfTrue'  'valueIfFalse')'
Xojo
Python,if condition : instructions «'else:' instructions»,if condition : instructions elif condition : instructions ... «'else:' instructions»,,valueIfTrue if condition else valueIfFalse (Python 2.5+)
S-Lang,if (condition') { 'instructions' } '«'else { 'instructions' }'»,if (condition') { 'instructions' } else if ('condition') {' instructions } ... «'else { 'instructions }»,switch (variable') { case 'case1': 'instructions' } { case 'case2': 'instructions' }' ...,
Fortran,IF (condition') THEN 'instructions' ELSE 'instructions' ENDIF',IF (condition') THEN 'instructions' ELSEIF ('condition') THEN 'instructions' ... ELSE 'instructions' ENDIF',SELECT CASE(variable') CASE ('case1') 'instructions' ... CASE DEFAULT 'instructions''' END SELECT,
Forth,condition' IF 'instructions «' ELSE 'instructions»' THEN',condition' IF 'instructions ELSE condition' IF 'instructions' THEN THEN',value' CASE' case' OF 'instructions' ENDOF' case' OF 'instructions' ENDOF' default instructions ENDCASE,condition' IF 'valueIfTrue' ELSE 'valueIfFalse' THEN'
OCaml,if condition then begin instructions end «'else begin' instructions end»,if condition then begin instructions end else if condition then begin instructions end ... «'else begin' instructions end»,match value with pattern1' -> 'expression' | 'pattern2' -> 'expression ... «'| _ -> 'expression»,if condition then valueIfTrue else valueIfFalse
F#,if condition then instructions «'else' instructions»,if condition then instructions elif condition then instructions ... «'else' instructions»
Standard ML,if condition then «'('»instructions «')'» else «'('» instructions «')'»,if condition then «'('»instructions «')'» else if condition then «'('» instructions «')'» ... else «'('» instructions «')'»,</nowiki> pattern2 => expression ... «| _ => '''expression»
Haskell (GHC),if condition then expression else expression or when condition (do instructions')' or unless notcondition (do instructions')',</nowiki> condition = expression | condition = expression | otherwise =''' expression,case value of { pattern1' -> 'expression'; 'pattern2' ->'expression';' ... «'_ -> 'expression»}
Bash shell,
CoffeeScript,if condition then expression «'else' expression»,if condition then expression else if condition then expression «'else' expression»,switch expression when condition then expression else expression,All conditions are expressions
if condition expression «'else' expression»,if condition expression else if condition expression «'else' expression»
expression if condition,unless condition expression else unless condition expression «'else' expression»,switch expression when condition expression «'else' expression»
unless condition expression «'else' expression»
expression unless condition
COBOL,IF condition «'THEN'» expression «'ELSE' expression»'.',,EVALUATE expression «'ALSO' expression...» WHEN case-or-condition «'ALSO' case-or-condition...» expression ... «'WHEN OTHER' expression» END-EVALUATE,
,if,else if,select case,conditional expression
