,String representation,Object copy,Value equality,Object comparison,Hash code,Object ID
Human-readable,Source-compatible
ABAP Objects,colspan=7
C++ (STL),,,,x == y<ref>assuming that "x" and "y" are the objects (and not a pointer). Can be customized by overloading the object's == operator</ref>,,,pointer to object can be converted into an integer ID
C#,x'.ToString()',,x'.Clone()',x'.Equals('y')',x'.CompareTo('y')',x'.GetHashCode()',System<wbr/>.Runtime<wbr/>.CompilerServices<wbr/>.RuntimeHelpers<wbr/>.GetHashCode(x')'
Java,x'.toString()',,x'.clone()'<ref>Only accessible from within the class  since the clone() method inherited from Object is protected  unless the class overrides the method and makes it public. If using the clone() inherited from Object  the class must implement the Cloneable interface to allow cloning.</ref>,x'.equals('y')',x'.compareTo('y')'<ref>The class should implement the interface Comparable for this method to be standardized.</ref>,x'.hashCode()',System<wbr/>.identityHashCode<wbr/>(x')'
JavaScript,x'.toString()',,,,,,
D,x'.toString()' or <br /> std.conv<wbr/>.to!string<wbr/>(x')',x'.stringof',,x == y or <br /> x'.opEquals('y')',x'.opCmp('y')',x'.toHash()',
eC,x'.OnGetString(tempString  null  null)' or <br /> PrintString(x')',,y'.OnCopy('x')',,x'.OnCompare('y')',,object handle can be converted into an integer ID
Objective-C (Cocoa),x'.description',x'.debugDescription',[x' copy]'<ref>Implemented by the object's copyWithZone: method</ref>,[x' isEqual:'y']',[x' compare:'y']'<ref>compare: is the conventional name for the comparison method in Foundation classes. However  no formal protocol exists</ref>,x'.hash',pointer to object can be converted into an integer ID
Swift,x'.description'<ref>Only if object conforms to the Printable protocol</ref>,x'.debugDescription'<ref>Only if object conforms to the DebugPrintable protocol</ref>,,x == y<ref>Only if object conforms to the Equatable protocol</ref>,x < y<ref>Only if object conforms to the Comparable protocol</ref>,x'.hashValue'<ref>Only if object conforms to the hashValue protocol</ref>,reflect(x')<wbr/>.objectIdentifier!<wbr/>.uintValue()'
Smalltalk,x displayString,x printString,x copy,x = y,,x hash,x identityHash
Python,str(x')'<ref>Can be customized by the object's __str__() method</ref>,repr(x')'<ref>Can be customized by the object's __repr__() method</ref>,copy.copy(x')'<ref>Can be customized by the object's __copy__() method</ref>,x == y<ref>Can be customized by the object's __eq__() method</ref>,cmp(x'  'y')'<ref>Only in Python 2.x and before (removed in Python 3.0). Can be customized by the object's __cmp__() method</ref>,hash(x')'<ref>Can be customized by the object's __hash__() method. Not all types are hashable (mutable types are usually not hashable)</ref>,id(x')'
Visual Basic .NET,x'.ToString()',,x'.Clone()',x'.Equals('y')',x'.CompareTo('y')',x'.GetHashCode()',
Eiffel,x'.out',,x'.twin',x'.is_equal('y')',When x is COMPARABLE  one can simply do x < y,When x is HASHABLE  one can use x'.hash_code',When x is IDENTIFIED  one can use x'.object_id'
PHP,$x->__toString(),,clone x<ref>Can be customized by the object's __clone() method</ref>,x == y,,,spl_object_hash(x')'
Perl,"$x'"'<ref name="perl_string">Can be customized by overloading the object's string conversion operator</ref>,Data::Dumper<wbr/>->Dump<wbr/>([$x'] [x])'<ref>This example requires useing Data::Dumper</ref>,Storable<wbr/>::dclone<wbr/>($x')'<ref>This example requires useing Storable</ref>,,,,Scalar<wbr/>::Util<wbr/>::refaddr<wbr/>( $x' )'<ref>This example requires useing Scalar::Util</ref>
Perl 6,~x<ref name="perl_string" />,x'.perl',x'.clone',x eqv y,x cmp y,,x'.WHICH'
Ruby,x'.to_s',x'.inspect',x'.dup' or <br /> x'.clone',x == y or <br /> x'.eql?('y')',x <=> y,x'.hash',x'.object_id'
Windows PowerShell,x'.ToString()',,x'.Clone()',x'.Equals('y')',x'.CompareTo('y')',x'.GetHashCode()',
OCaml,,,Oo.copy x,x = y,,Hashtbl<wbr/>.hash x,Oo.id x
F#,string x or x'<wbr/>.ToString()' or sprintf "%O" x,sprintf "%A" x,x'.Clone()',x = y or x'<wbr/>.Equals('y')',compare x y or x'<wbr/>.CompareTo('y')',hash x or x'<wbr/>.GetHashCode()',
COBOL,colspan=7
